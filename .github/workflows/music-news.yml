name: Music News Automation

on:
  schedule:
    # 매일 한국시간 오전 10시 (UTC 오전 1시)
    - cron: '0 1 * * *'
  workflow_dispatch: # 수동 실행 가능

jobs:
  run-music-news:
    runs-on: ubuntu-latest
    timeout-minutes: 30  # 30분 타임아웃
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'  # pip 캐시 활용
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Verify environment variables
      run: |
        echo "Checking environment variables..."
        if [ -z "$SLACK_TOKEN" ]; then echo "❌ SLACK_TOKEN not set"; exit 1; fi
        if [ -z "$EMAIL_ADDRESS" ]; then echo "❌ EMAIL_ADDRESS not set"; exit 1; fi
        if [ -z "$EMAIL_PASSWORD" ]; then echo "❌ EMAIL_PASSWORD not set"; exit 1; fi
        echo "✅ All environment variables are set"
      env:
        SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
        EMAIL_ADDRESS: ${{ secrets.EMAIL_ADDRESS }}
        EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
    
    - name: Run music news automation
      env:
        SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
        EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
        EMAIL_ADDRESS: ${{ secrets.EMAIL_ADDRESS }}
      run: |
        echo "🎵 Starting music news automation..."
        python music_news_automation.py --production
        echo "✅ Music news automation completed"
    
    - name: Upload logs
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: automation-logs-${{ github.run_number }}
        path: |
          music_news_automation.log
          *.log
        retention-days: 7  # 7일간 보관
    
    - name: Notify on failure
      if: failure()
      run: |
        echo "❌ Workflow failed. Check the logs for details."
        echo "Failed at: $(date)"

